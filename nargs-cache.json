{"auto_alias_prefix":"--","auto_alias_style":"lowercase-hyphen","builtins":{"help":null,"query":null,"usage":null,"version":null},"cache":true,"cache_file":"nargs-cache.json","dump":{"args":{"a":["--args"],"ai":{"--args":{"is_flag":false,"prefix":"--","text":"args"}},"ar":{"_help_":{"a":["--help","-h"],"ai":{"--help":{"is_flag":false,"prefix":"--","text":"help"},"-h":{"is_flag":true,"prefix":"-","text":"h"}},"ap":false,"ar":{"examples":{"a":["--examples","-e"],"ai":{"--examples":{"is_flag":false,"prefix":"--","text":"examples"},"-e":{"is_flag":true,"prefix":"-","text":"e"}},"ar":{},"as":false,"da":"--examples","h":"Print program examples and exit.","ib":true,"is":false},"export":{"a":["--export"],"ai":{"--export":{"is_flag":false,"prefix":"--","text":"export"}},"ar":{"overwrite":{"a":["--overwrite"],"ai":{"--overwrite":{"is_flag":false,"prefix":"--","text":"overwrite"}},"ar":{},"da":"--overwrite","h":"Implicitly overwrites exported documentation file if it exists already.","ib":true},"to":{"a":["--to"],"ai":{"--to":{"is_flag":false,"prefix":"--","text":"to"}},"ar":{},"da":"--to","h":"Export help to selected path.","ib":true,"t":"vpath","v":true,"vi":1,"vm":1,"vr":true}},"da":"--export","h":"Export help to selected format.","i":["asciidoc","html","markdown","text"],"ib":true,"t":"str","v":true,"vi":1,"vm":1,"vr":true},"metadata":{"a":["--metadata","-m"],"ai":{"--metadata":{"is_flag":false,"prefix":"--","text":"metadata"},"-m":{"is_flag":true,"prefix":"-","text":"m"}},"ar":{"json":{"a":["--json","-j"],"ai":{"--json":{"is_flag":false,"prefix":"--","text":"json"},"-j":{"is_flag":true,"prefix":"-","text":"j"}},"ar":{},"da":"--json","h":"Selected metadata is returned as json dictionary","ib":true,"is":false},"keys":{"a":["--keys","-k"],"ai":{"--keys":{"is_flag":false,"prefix":"--","text":"keys"},"-k":{"is_flag":true,"prefix":"-","text":"k"}},"ar":{},"da":"--keys","h":"Return only keys from metadata dictionary","ib":true,"is":false,"xg":[1]},"values":{"a":["--values","-v"],"ai":{"--values":{"is_flag":false,"prefix":"--","text":"values"},"-v":{"is_flag":true,"prefix":"-","text":"v"}},"ar":{},"da":"--values","h":"Return only values from metadata dictionary","ib":true,"is":false,"xg":[1]}},"as":false,"da":"--metadata","h":"Print program metadata and exit.","ib":true,"in":"KEY can be provided to get only selected key(s) from metadata dictionary. If KEY is not provided then all keys from metadata dictionary are selected.","is":false,"l":"KEY","t":"str","v":true,"vi":1,"x":{"keys":{"1":["values"]},"values":{"1":["keys"]}}},"syntax":{"a":["--syntax"],"ai":{"--syntax":{"is_flag":false,"prefix":"--","text":"syntax"}},"ar":{"only":{"a":["--only"],"ai":{"--only":{"is_flag":false,"prefix":"--","text":"only"}},"ar":{},"da":"--only","h":"Print only arguments Cheat Sheet syntax and exit.","ib":true,"is":false}},"da":"--syntax","h":"Print arguments Cheat Sheet syntax and exit.","ib":true,"is":false}},"as":false,"da":"--help","h":"Print program help and exit.","ib":true,"is":false},"_query_":{"a":["--query"],"ai":{"--query":{"is_flag":false,"prefix":"--","text":"query"}},"ap":false,"ar":{},"as":false,"da":"--query","h":"Load program's arguments from a json file with optional parameterized values.","ib":true,"in":"query argument allows to execute safe command-line arguments query on the program. Command-line arguments are collected through a JSON file. The JSON file has two attributes 'command' and 'params'. 'command' accepts a list of command-line arguments with values where each value may be replaced with a question mark. 'params' accepts a list of values. The number of values in 'params' must match the number of question marks in 'command'. 'command' arguments are only parsed as arguments and 'params' are only parsed as argument values. It allows a safe way to pass values collected from a third party program like a web application to the command-line program. All errors are returned as a json dump for better communication with third party program.(see Nargs developer documentation)","is":false,"t":"file","v":true,"vi":1,"vm":1,"vr":true},"_usage_":{"a":["--usage","-u","?"],"ai":{"--usage":{"is_flag":false,"prefix":"--","text":"usage"},"-u":{"is_flag":true,"prefix":"-","text":"u"},"?":{"is_flag":true,"prefix":"","text":"?"}},"ar":{"builtins":{"a":["--builtins","-b"],"ai":{"--builtins":{"is_flag":false,"prefix":"--","text":"builtins"},"-b":{"is_flag":true,"prefix":"-","text":"b"}},"ar":{},"da":"--builtins","h":"Print built-ins arguments.","ib":true,"is":false},"depth":{"a":["--depth","-d"],"ai":{"--depth":{"is_flag":false,"prefix":"--","text":"depth"},"-d":{"is_flag":true,"prefix":"-","text":"d"}},"ar":{},"d":[1],"da":"--depth","h":"Provide the printing depth of nested arguments.","ib":true,"in":"If LEVEL == -1 then all nested arguments are printed. If LEVEL == 0 then only selected argument is printed. If LEVEL > 0 then the bigger the LEVEL number is, the bigger the children nesting level is if any children are available.","is":false,"l":"LEVEL","re":true,"t":"int","v":true,"vi":1,"vm":1,"vr":true},"examples":{"a":["--examples","-e"],"ai":{"--examples":{"is_flag":false,"prefix":"--","text":"examples"},"-e":{"is_flag":true,"prefix":"-","text":"e"}},"ar":{},"da":"--examples","h":"Print argument(s) examples if any.","ib":true,"is":false},"flags":{"a":["--flags","-F"],"ai":{"--flags":{"is_flag":false,"prefix":"--","text":"flags"},"-F":{"is_flag":true,"prefix":"-","text":"F"}},"ar":{},"da":"--flags","h":"Print flag set if any for all arguments available on the terminal.","ib":true,"is":false},"from":{"a":["--from","-f"],"ai":{"--from":{"is_flag":false,"prefix":"--","text":"from"},"-f":{"is_flag":true,"prefix":"-","text":"f"}},"ar":{},"d":[0],"da":"--from","h":"This option allows to start printing usage from a parent.","ib":true,"in":"If LEVEL == -1 then selected argument is the root argument. If LEVEL == 0 then selected argument is the current argument. If LEVEL > 0 then one argument parent is selected and the bigger the LEVEL number is, the older the selected parent is unless parent's limit is reached. Argument's parent's limit is the oldest parent also called the root argument.","is":false,"l":"LEVEL","re":true,"t":"int","v":true,"vi":1,"vm":1,"vr":true},"hint":{"a":["--hint","-h"],"ai":{"--hint":{"is_flag":false,"prefix":"--","text":"hint"},"-h":{"is_flag":true,"prefix":"-","text":"h"}},"ar":{},"da":"--hint","h":"Print argument(s) hint if any.","ib":true,"is":false},"info":{"a":["--info","-i"],"ai":{"--info":{"is_flag":false,"prefix":"--","text":"info"},"-i":{"is_flag":true,"prefix":"-","text":"i"}},"ar":{},"da":"--info","h":"Print argument(s) info if any.","ib":true,"is":false},"path":{"a":["--path","-p"],"ai":{"--path":{"is_flag":false,"prefix":"--","text":"path"},"-p":{"is_flag":true,"prefix":"-","text":"p"}},"ar":{},"da":"--path","h":"Print argument(s) path with values.","ib":true,"is":false},"properties":{"a":["--properties","-r"],"ai":{"--properties":{"is_flag":false,"prefix":"--","text":"properties"},"-r":{"is_flag":true,"prefix":"-","text":"r"}},"ar":{},"da":"--properties","h":"Print argument(s) properties.","i":["allow_parent_fork","allow_siblings","need_child","preset","repeat","required","xor_groups"],"ib":true,"is":false,"t":"str","v":true,"vi":1,"vm":7}},"da":"--usage","h":"Print program usage and exit.","ib":true,"in":"LEVEL is an integer >= 0. LEVEL number describes the number of nested node levels to print. LEVEL number is relative to current argument node level. If LEVEL == 0 then all nested node levels are printed. If LEVEL == 1 then only current argument is printed. If LEVEL > 1 current argument's node levels are printed and LEVEL sets the depth of node levels nesting.","is":false,"iu":true,"rc":["depth","from"]},"_version_":{"a":["--version","-v"],"ai":{"--version":{"is_flag":false,"prefix":"--","text":"version"},"-v":{"is_flag":true,"prefix":"-","text":"v"}},"ap":false,"ar":{},"as":false,"da":"--version","h":"Print program version and exit.","ib":true,"is":false},"clone":{"a":["--clone"],"ai":{"--clone":{"is_flag":false,"prefix":"--","text":"clone"}},"ar":{"diren_git":{"a":["--diren-git"],"ai":{"--diren-git":{"is_flag":false,"prefix":"--","text":"diren-git"}},"ar":{},"da":"--diren-git","in":"It allows to provide an alias for the git directory at destination. For instance with diren_git=\"test\", bare repository at destination is going to be \"test.git\". If diren_git is not provided then CHILD_SCR_FOLDER name is going to be the alias for the destination bare repositoryl","t":"str","v":true,"vi":1,"vm":1,"vr":true},"remote":{"a":["--remote"],"ai":{"--remote":{"is_flag":false,"prefix":"--","text":"remote"}},"ar":{},"da":"--remote","in":"provide remote name i.e. origin","t":"str","v":true,"vi":1,"vm":1,"vr":true},"shared":{"a":["--shared"],"ai":{"--shared":{"is_flag":false,"prefix":"--","text":"shared"}},"ar":{},"da":"--shared","i":["0xxx","all","everybody","false","group","true","umask","world"],"in":"set shared option with 'git config core.sharedRepository'","t":"str","v":true,"vi":1,"vm":1,"vr":true},"to_directory":{"a":["--to-directory"],"ai":{"--to-directory":{"is_flag":false,"prefix":"--","text":"to-directory"}},"ar":{"package":{"a":["--package"],"ai":{"--package":{"is_flag":false,"prefix":"--","text":"package"}},"ar":{},"da":"--package","l":"ALIAS","t":"str","v":true,"vi":1,"vm":1,"vr":true}},"da":"--to-directory","l":"PARENT_DST_FOLDER","t":"dir","v":true,"vi":1,"vm":1,"vr":true,"xg":[1]},"to_repository":{"a":["--to-repository"],"ai":{"--to-repository":{"is_flag":false,"prefix":"--","text":"to-repository"}},"ar":{"package":{"a":["--package"],"ai":{"--package":{"is_flag":false,"prefix":"--","text":"package"}},"ar":{},"da":"--package","l":"ALIAS","re":true,"t":"str","v":true,"vi":1,"vm":1,"vr":true},"uuid4":{"a":["--uuid4"],"ai":{"--uuid4":{"is_flag":false,"prefix":"--","text":"uuid4"}},"ar":{},"da":"--uuid4","l":"UUID4","re":true,"t":"str","v":true,"vi":1,"vm":1,"vr":true}},"da":"--to-repository","in":"Create path with REPOSITORY_PATH/first_letter_package/package/uuid4/diren.git. ex: ~/fty/src/git/a/accessibility/78d3adc7fdd546c4ba2630d987237a51/src.git, if repository is not given then defaut repository is set.","l":"REPOSITORY_PATH","rc":["package","uuid4"],"t":"str","v":true,"vi":1,"vm":1,"xg":[1]}},"da":"--clone","l":"GIT_SOURCES_FOLDER","n":true,"t":"dir","v":true,"vi":1,"vm":1,"x":{"to_directory":{"1":["to_repository"]},"to_repository":{"1":["to_directory"]}}},"set_project":{"a":["--set-project"],"ai":{"--set-project":{"is_flag":false,"prefix":"--","text":"set-project"}},"ar":{"branches":{"a":["--branches"],"ai":{"--branches":{"is_flag":false,"prefix":"--","text":"branches"}},"ar":{},"da":"--branches","in":"choose any branch name except main or master i.e. dev. main/master branch is created automatically.","l":"BRANCH_NAME","t":"str","v":true,"vi":1,"vr":true},"email":{"a":["--email"],"ai":{"--email":{"is_flag":false,"prefix":"--","text":"email"}},"ar":{},"da":"--email","l":"EMAIL","t":"str","v":true,"vi":1,"vm":1,"vr":true},"init":{"a":["--init"],"ai":{"--init":{"is_flag":false,"prefix":"--","text":"init"}},"ar":{},"da":"--init","in":"Create new git project with a main branch and a dev branch."},"shared":{"a":["--shared"],"ai":{"--shared":{"is_flag":false,"prefix":"--","text":"shared"}},"ar":{},"da":"--shared","i":["0xxx","all","everybody","false","group","true","umask","world"],"in":"set shared option with 'git config core.sharedRepository'","t":"str","v":true,"vi":1,"vm":1,"vr":true},"username":{"a":["--username"],"ai":{"--username":{"is_flag":false,"prefix":"--","text":"username"}},"ar":{},"da":"--username","l":"NAME","t":"str","v":true,"vi":1,"vm":1,"vr":true}},"da":"--set-project","l":"GIT_SOURCES_FOLDER","t":"dir","v":true,"vi":1,"vm":1},"tag":{"a":["--tag"],"ai":{"--tag":{"is_flag":false,"prefix":"--","text":"tag"}},"ar":{"file":{"a":["--file"],"ai":{"--file":{"is_flag":false,"prefix":"--","text":"file"}},"ar":{"filetype":{"a":["--filetype"],"ai":{"--filetype":{"is_flag":false,"prefix":"--","text":"filetype"}},"ar":{},"da":"--filetype","i":["gradle","js","json","py","txt","web_config"],"in":"Only certain filetypes are managed to get and set version. If filetype is not provided then filetype is going to be detected automatically.","t":"str","v":true,"vi":1,"vm":1},"json_keys":{"a":["--json-keys"],"ai":{"--json-keys":{"is_flag":false,"prefix":"--","text":"json-keys"}},"ar":{},"da":"--json-keys","in":"For JSON file the default key is version i.e. dict(version=\"1.0.0\") but a list of keys can be provided for different schemas. Examples for JSON schema dict(app=dict(info=dict(version=\"1.0.0\"))) then provide json_keys ['app', 'info', 'version']","t":"str","v":true,"vi":1}},"da":"--file","in":"Version file to set or get the version from. Multiple version file can be provided i.e. --file gpm.json --file __init__.py. The first file of the list is where the version is fetched.","r":"fork","t":"str","v":true,"vi":1,"vm":1,"vr":true},"increment":{"a":["--increment"],"ai":{"--increment":{"is_flag":false,"prefix":"--","text":"increment"}},"ar":{},"da":"--increment","i":["major","minor","patch"],"in":"Increment version. If no value is provided then a prompt pops-up to request for the increment type.","t":"str","v":true,"vi":1,"vm":1},"msg":{"a":["--msg"],"ai":{"--msg":{"is_flag":false,"prefix":"--","text":"msg"}},"ar":{},"da":"--msg","in":"add a default commit message if commit is needed","l":"COMMIT_MESSAGE","t":"str","v":true,"vi":1,"vm":1,"vr":true},"path_src":{"a":["--path-src"],"ai":{"--path-src":{"is_flag":false,"prefix":"--","text":"path-src"}},"ar":{},"da":"--path-src","in":"path of the git project, it doesn't have to be the root path","l":"PATH","t":"dir","v":true,"vi":1,"vm":1,"vr":true},"pull":{"a":["--pull"],"ai":{"--pull":{"is_flag":false,"prefix":"--","text":"pull"}},"ar":{},"da":"--pull","in":"pull development branch and principal branch before merge"},"remote":{"a":["--remote"],"ai":{"--remote":{"is_flag":false,"prefix":"--","text":"remote"}},"ar":{},"da":"--remote","in":"provide remote name i.e. origin","t":"str","v":true,"vi":1,"vm":1,"vr":true},"version":{"a":["--version"],"ai":{"--version":{"is_flag":false,"prefix":"--","text":"version"}},"ar":{},"da":"--version","in":"Provide version to set.","t":"str","v":true,"vi":1,"vm":1}},"da":"--tag","in":"Create a git version tag."},"update":{"a":["--update"],"ai":{"--update":{"is_flag":false,"prefix":"--","text":"update"}},"ar":{"branches":{"a":["--branches"],"ai":{"--branches":{"is_flag":false,"prefix":"--","text":"branches"}},"ar":{"msg":{"a":["--msg"],"ai":{"--msg":{"is_flag":false,"prefix":"--","text":"msg"}},"ar":{},"da":"--msg","in":"add a commit message if commit is needed","l":"COMMIT_MESSAGE","t":"str","v":true,"vi":1,"vm":1,"vr":true},"remote":{"a":["--remote"],"ai":{"--remote":{"is_flag":false,"prefix":"--","text":"remote"}},"ar":{},"da":"--remote","in":"provide remote name i.e. origin","t":"str","v":true,"vi":1,"vm":1,"vr":true}},"da":"--branches","in":"update local branches in a project","l":"PATH","t":"dir","v":true,"vi":1,"vm":1},"gitframe":{"a":["--gitframe"],"ai":{"--gitframe":{"is_flag":false,"prefix":"--","text":"gitframe"}},"ar":{},"da":"--gitframe","in":"this is for gitframe developers only. This command is needed in order to allow development on gitframe with gitframe. It copies the src code to a beta version folder and put gitframe in the path."},"gitignore":{"a":["--gitignore"],"ai":{"--gitignore":{"is_flag":false,"prefix":"--","text":"gitignore"}},"ar":{},"da":"--gitignore","in":"refresh gitignore cache","l":"PATH","t":"dir","v":true,"vi":1,"vm":1},"mgt":{"a":["--mgt"],"ai":{"--mgt":{"is_flag":false,"prefix":"--","text":"mgt"}},"ar":{"msg":{"a":["--msg"],"ai":{"--msg":{"is_flag":false,"prefix":"--","text":"msg"}},"ar":{},"da":"--msg","in":"add a commit message if commit is needed","l":"COMMIT_MESSAGE","t":"str","v":true,"vi":1,"vm":1,"vr":true},"remote":{"a":["--remote"],"ai":{"--remote":{"is_flag":false,"prefix":"--","text":"remote"}},"ar":{},"da":"--remote","in":"provide remote name i.e. origin","t":"str","v":true,"vi":1,"vm":1,"vr":true}},"da":"--mgt","in":"update mgt folder, commit and push","l":"PATH","t":"dir","v":true,"vi":1,"vm":1}},"da":"--update","n":true}},"da":"--args","ex":["gitframe --clone /home/user/$USER/fty/wrk/m/mockpkg/f011c235e19c49a2a34f9b4b1c53f37b/src --to-directory /tmp --package clone --diren-git test --remote origin\ngitframe --clone /home/user/$USER/fty/wrk/m/mockpkg/f011c235e19c49a2a34f9b4b1c53f37b/src --to-repository /tmp --package clone --uuid4 f011c235e19c49a2a34f9b4b1c53f37b\ngitframe --tag --path-src /home/user/$USER/fty/wrk/m/mockpkg/f011c235e19c49a2a34f9b4b1c53f37b/src --file gpm.json --increment patch --msg edit --pull\ngitframe --set-project /tmp/test --username user/$USER --email not-set --init --shared group --branches dev\ngitframe --update --gitignore /home/user/$USER/fty/wrk/m/mockpkg/f011c235e19c49a2a34f9b4b1c53f37b/src\ngitframe --update --gitframe"],"in":"Python wrapper for git. It applies a git workflow close to GitFlow model from nvie.com. It uses semantic versioning 2.0.0","n":true,"re":true}},"map":{"arg_defaults":{"ap":true,"ar":{},"as":true,"d":null,"e":true,"ex":null,"h":null,"i":null,"ib":false,"ic":false,"il":[],"in":null,"is":true,"iu":false,"l":null,"n":false,"p":false,"pc":[],"r":"replace","rc":[],"re":false,"s":true,"t":null,"v":false,"vi":null,"vm":null,"vr":false,"x":{},"xg":null},"arg_props":{"a":"aliases","ai":"aliases_info","ap":"allow_parent_fork","ar":"args","as":"allow_siblings","d":"default","da":"default_alias","e":"enabled","ex":"examples","h":"hint","i":"in","ib":"is_builtin","ic":"is_custom_builtin","il":"in_labels","in":"info","is":"is_auto_alias","iu":"is_usage","l":"label","n":"need_child","p":"preset","pc":"preset_children","r":"repeat","rc":"required_children","re":"required","s":"show","t":"type","v":"values_authorized","vi":"values_min","vm":"values_max","vr":"values_required","x":"xor","xg":"xor_groups"},"theme_defaults":{"b":null,"f":null,"i":false,"o":false,"u":false},"theme_props":{"b":"background","f":"foreground","i":"italic","o":"bold","u":"underline"}},"md5_files":{"filenpa_metadata":{"filenpa":"/home/gabaaa/fty/wrk/g/gitframe/78d3adc7fdd546c4ba2630d987237a51/src/gpm.json","md5":"010df8c85568cdd9415d310bab041e50"},"nargs":{"filenpa":"/home/gabaaa/fty/wrk/g/gitframe/78d3adc7fdd546c4ba2630d987237a51/src/gpkgs/nargs/gpm.json","md5":"300c1938d8b4013eeb33771dad2ef769"},"options_file":{"filenpa":"/home/gabaaa/fty/wrk/g/gitframe/78d3adc7fdd546c4ba2630d987237a51/src/config/options.yaml","md5":"80e3af92dc7be5ec82a11742f164fe64"}},"md5_options":"fe370578b233133bd0e3606d8f34a8cf","metadata":{"authors":["Gabriel Auger"],"deps":["6de5a679-f1de-49b6-adb2-152434867a27|bump_version|1.2.2|gpm","0573e36e-e267-4200-a666-11c5b27cb9a2|gitlib|3.4.0|gpm","cf09346e-b436-4259-b6dd-e56516b508a5|message|9.0.0|gpm","89d8676a-6b02-43fa-8694-e97de5680cd0|nargs|5.1.2|gpm","b1a980c3-6e1c-4072-a16c-81df61f2f898|prompt|3.2.2|gpm","df328dbe-54ab-4a6d-b7a2-932b0eaee30a|shell_helpers|5.4.2|gpm"],"description":"Git Helpers for software development.","executable":"gitframe","filen_main":"main.py","gpm_version":"0.2.0","installer":"gpm","licenses":["MIT"],"name":"gitframe","timestamp":1723324033.888494,"uuid4":"78d3adc7-fdd5-46c4-ba26-30d987237a51","version":"11.2.0"},"nargs_version":"5.1.2","only_cache":false,"options_file":"config/options.yaml","path_etc":null,"pretty_help":true,"pretty_msg":true,"raise_exc":false,"substitute":false,"theme":{"about_fields":{"f":"202;233;130"},"aliases":{"f":"136;184;246"},"arg_index":{"o":true},"arg_path":{"f":"202;233;130"},"brackets":{"f":"202;233;130","o":true},"bullets":{"f":"156;153;142"},"emphasize":{"f":"229;120;109"},"examples":{},"flags":{"f":"149;228;84","i":true},"headers":{"f":"234;231;136","o":true},"hint":{"i":true},"info":{},"properties":{},"syntax_headers":{"f":"202;233;130"},"values":{"f":"215;135;255","i":true}}}